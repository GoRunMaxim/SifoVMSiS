/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("m")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("m[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("m[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "m";
}

SIGNAL("n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("n[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("n[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "n";
}

SIGNAL("block_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("block_3[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

SIGNAL("block_3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "block_3";
}

TRANSITION_LIST("Clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("m[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("m[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("n[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("block_1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3333;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("block_2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 476;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 1320.0;
		}
		LEVEL 1 FOR 400.0;
	}
}

TRANSITION_LIST("block_3[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31500.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 26920.0;
	}
}

TRANSITION_LIST("block_3[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29400.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 29020.0;
	}
}

TRANSITION_LIST("block_3[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 27300.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 31120.0;
	}
}

TRANSITION_LIST("block_3[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25200.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 400.0;
	}
}

TRANSITION_LIST("block_3[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23100.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 1720.0;
	}
}

TRANSITION_LIST("block_3[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21000.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 3820.0;
	}
}

TRANSITION_LIST("block_3[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18900.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 5920.0;
	}
}

TRANSITION_LIST("block_3[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16800.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 8020.0;
	}
}

TRANSITION_LIST("block_3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14700.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 10120.0;
	}
}

TRANSITION_LIST("block_3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12600.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 12220.0;
	}
}

TRANSITION_LIST("block_3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10500.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 14320.0;
	}
}

TRANSITION_LIST("block_3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8400.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 16420.0;
	}
}

TRANSITION_LIST("block_3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6300.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 18520.0;
	}
}

TRANSITION_LIST("block_3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4200.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 20620.0;
	}
}

TRANSITION_LIST("block_3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2100.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 22720.0;
	}
}

TRANSITION_LIST("block_3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 780.0;
			LEVEL 0 FOR 32820.0;
		}
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 24820.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "m";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "m[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "m[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "n[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "n[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "block_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "block_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "block_3";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "block_3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 21;
}

TIME_BAR
{
	TIME = 420000;
	MASTER = TRUE;
}
;
